package mhsn.kata.euler50;

/**
 * Highly divisible triangular number
 *
 * Problem 12
 *
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 */
public class HighlyDivisibleTriangularNumber {

  // 1. iterate over triangle numbers
  // 2. calculate number of divisors for each.
  // 3. if number of divisor over 500 break .
  public static void main(String[] args) {

    int result = 0;

    for (int i = 0;;i++ ){
      int triangleNumber = i*(i+1)/2;
      int divisiorNumbers = getNumberOfDivisiors(triangleNumber);
      System.out.println(divisiorNumbers);
      if (divisiorNumbers>500){
        result = i*(i+1)/2;
        System.out.println(result);
        break;
      }
    }
  }

  private static int getNumberOfDivisiors(int number) {
    int numberOfDivisiors=0;
    for (int i = 1; i < number; i++) {
      if(number%i ==0)
        numberOfDivisiors++;
    }
    return  numberOfDivisiors;
  }

}
